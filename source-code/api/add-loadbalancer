#!/bin/bash 

:<<'hopper-stack-notice'

Copyright 2016 Hopper-Stack

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

hopper-stack-notice

# +------------------------------------------+
# | VARIABLES                                |
# +------------------------------------------+
# pool name
LOADBAL=HopperPool

# VIP name
LOADVIP=HopperVIP

# virtual machines
nodename1=lbnode1
nodename2=lbnode2

# port to balance
port_type=TCP
port_value=22

# +------------------------------------------+
# | Load Balancer as a Service Configuration |
# +------------------------------------------+
source profile
source $PROJECT-openrc.sh

# create the test machines
IMG=`nova image-list | grep cirros | head -1 | awk '{print $4}'`
FLV=`nova flavor-list | grep small | head -1 | awk '{print $4}'`
NET=`neutron net-list | grep $PROJECT-net | awk '{print $2}'`
SEC=`nova secgroup-list | grep hopper-defaults | awk '{print $2}'`
nova boot --image $IMG --security-groups $SEC --flavor $FLV \
--nic net-id=$NET $nodename1
nova boot --image $IMG --security-groups $SEC --flavor $FLV \
--nic net-id=$NET $nodename2

# wait for creation
let RUN=0
echo
echo -n " Please wait - building instances "
while [ $RUN -lt 2 ]; do
   sleep 7
   RUN=`nova list | grep Running | egrep "$nodename1|$nodename2" | wc -l`
   echo -n "."
done
echo

# created a new pool
SUBID=`neutron subnet-list | grep $PROJECT-subnet | awk '{print $2}'`
neutron lb-pool-create --lb-method ROUND_ROBIN --name $LOADBAL \
--protocol $port_type --subnet-id $SUBID
sleep 5

# add members
IP1=`nova list | grep $nodename1 | awk '{print $12}' | cut -f2 -d=`
IP2=`nova list | grep $nodename2 | awk '{print $12}' | cut -f2 -d=`
neutron lb-member-create --address $IP1 --protocol-port $port_value $LOADBAL
neutron lb-member-create --address $IP2 --protocol-port $port_value $LOADBAL
sleep 5

# created a new vip
neutron lb-vip-create --name $LOADVIP --protocol-port $port_value \
--protocol $port_type --subnet-id $SUBID $LOADBAL  > /tmp/file1.tmp
VIP=`cat /tmp/file1.tmp | grep "port_id" | awk '{print $4}'`

# created a new floatingip
EXT=`neutron net-list | grep ext-net | awk '{print $2}'`
neutron floatingip-create $EXT > /tmp/file2.tmp
FIP=`cat /tmp/file2.tmp | grep "id" | egrep -v "tenant|port|router|floating" \
| awk '{print $4}'`
FADDR=`cat /tmp/file2.tmp | grep floating_ip_address | awk '{print $4}'`
sleep 5

rm -f /tmp/file1.tmp /tmp/file2.tmp

# create a health monitor
#neutron lb-healthmonitor-create --timeout 3 --max-retries 3 \
#--delay 60 --type $port_type

# associated health monitor id to pool
#MON=`neutron lb-healthmonitor-list | grep True | awk '{print $2}'`
#neutron lb-healthmonitor-associate $MON $LOADBAL

# associated floating IP ID with the VIP port ID 
neutron floatingip-associate $FIP $VIP

echo
echo
echo "+------------------------------------------+"
echo "  Floating VIP Address:  $FADDR "
echo "+------------------------------------------+"
echo
echo

